05:25:46 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
05:25:46 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
05:25:46 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.type.FormatMapper] : [jackson] -> [org.hibernate.type.JacksonJsonFormatMapper]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.type.FormatMapper] : [jsonb] -> [org.hibernate.type.JsonBJsonFormatMapper]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.type.FormatMapper] : [jackson-xml] -> [org.hibernate.type.JacksonXmlFormatMapper]
05:25:46 [main] TRACE org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.type.FormatMapper] : [jaxb] -> [org.hibernate.type.JaxbXmlFormatMapper]
05:25:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.1.1.Final
05:25:46 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
05:25:46 [main] TRACE org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl - trying via [new URL("hibernate.cfg.xml")]
05:25:46 [main] TRACE org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl - trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
05:25:46 [main] TRACE org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - In resolveEntity(-//Hibernate/Hibernate Configuration DTD//EN, http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd, null, null)
05:25:46 [main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd` as DTD references
05:25:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
05:25:46 [main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
05:25:46 [main] DEBUG org.hibernate.cfg.Configuration - Building session factory using internal StandardServiceRegistryBuilder
05:25:46 [main] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
05:25:46 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
05:25:46 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Resolving IdentifierGenerator instances will not use CDI as it was not configured
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
05:25:46 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
05:25:46 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
05:25:46 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.cache.spi.RegionFactory]
05:25:46 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
05:25:46 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
05:25:47 [main] DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d755813
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d755813
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d755813
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@69c93ca4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@69c93ca4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@63da207f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@63da207f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@173373b4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@173373b4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@40d10481
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@40d10481
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@40d10481
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@60dd3c23
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@60dd3c23
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@60dd3c23
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52b6319f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52b6319f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@52b6319f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@52b6319f
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5e9456ae
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@16a9a4f1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@16a9a4f1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1f1cae23
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7c455e96
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@985696
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@985696
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@985696
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5bcde458
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5bcde458
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5bcde458
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@215a34b4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@215a34b4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@215a34b4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77bd7fe7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77bd7fe7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@77bd7fe7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35d3ab60
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35d3ab60
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@35d3ab60
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10876a6
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10876a6
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71870da7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71870da7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6dd91637
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6dd91637
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6dd91637
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@45792847
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@706cb08
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@706cb08
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e25147a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6b68cb27
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6b68cb27
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6b68cb27
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@675ffd1d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@675ffd1d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@675ffd1d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@56303475
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30506c0d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1dcca8d3
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1dcca8d3
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5631962
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5631962
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@52a70627
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6124287a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@19569ebd
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4632cfc
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6e1f8469
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e380628
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b6c624
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b6c624
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1eaf1e62
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1eaf1e62
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@c81fd12
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@c81fd12
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@62e6a3ec
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@62e6a3ec
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5754de72
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5754de72
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31ee96f4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@320494b6
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@652ab8d9
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@652ab8d9
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@14fc5d40
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@14fc5d40
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@51e0301d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47d7bfb3
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@770b3be0
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@770b3be0
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1eb6e1c
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1eb6e1c
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51dbd6e4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51dbd6e4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51dbd6e4
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b8bd14b
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b8bd14b
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b8bd14b
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f13be1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5f303ecd
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@50d3bf39
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@50d3bf39
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25a73de1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25a73de1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25a73de1
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@29852487
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@771db12c
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3afae281
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3afae281
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@26ae880a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@26ae880a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@26ae880a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@260f2144
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@260f2144
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3c017078
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3c017078
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@51827393
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@51827393
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3be4f71
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3be4f71
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5c645b43
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5c645b43
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6bd16207
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66ba7e45
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66ba7e45
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@141e879d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@141e879d
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@99a78d7
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@31da6b2e
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61c76850
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70242f38
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a22ad2b
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@48c3205a
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@121c54fa
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4390f46e
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c6442c2
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
05:25:47 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
05:25:47 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
05:25:47 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/postgres]
05:25:47 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=, dialect=org.hibernate.dialect.PostgreSQLDialect, user=postgres}
05:25:47 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
05:25:47 [main] DEBUG org.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
05:25:47 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001115: Connection pool size: 20 (min=1)
05:25:47 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 10.21
      major : 10
      minor : 21
05:25:47 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.4.0
      major : 42
      minor : 4
05:25:47 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
05:25:47 [main] INFO  SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
05:25:47 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
05:25:47 [main] DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571a9686) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@719d35e8)
05:25:47 [main] DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
05:25:47 [main] DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
05:25:47 [main] DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5eb2172
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5eb2172
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@141e879d`
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
05:25:47 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a2b1eb4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@702c436b]
05:25:47 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name User
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: User -> models.User
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: models.User -> models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [users]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [users]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity models.User on table users
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.User.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.User] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.User
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.User:id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for id
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: users.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading id with null
05:25:47 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Bind @Id on id
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.User.password
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.User:password]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for password
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: users.password
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property password
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading password with null
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.User.role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property role
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading role with none
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.User.username
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property username with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.User:username]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for username
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: users.username
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property username
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading username with null
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: models.Role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Role
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: Role -> models.Role
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: models.Role -> models.Role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_roles]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_roles]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity models.Role on table user_roles
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Role.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=id, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.Role] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Role
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Role:id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for id
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: user_roles.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading id with null
05:25:47 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Bind @Id on id
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Role.user_role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_role]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_role]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property user_role with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Role:user_role]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for user_role
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: user_roles.user_role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_role]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property user_role
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading user_role with null
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: models.Reimbursement
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Reimbursement
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: Reimbursement -> models.Reimbursement
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: models.Reimbursement -> models.Reimbursement
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity models.Reimbursement on table reimbursement
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=id, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.Reimbursement] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Reimbursement
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Reimbursement:id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for id
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading id with null
05:25:47 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Bind @Id on id
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.amount
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [amount]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [amount]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=amount, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property amount with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Reimbursement:amount]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for amount
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement.amount
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [amount]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [amount]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [amount]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property amount
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading amount with null
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.author
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=author, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property author
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading author with none
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.description
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=description, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Reimbursement:description]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for description
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement.description
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property description
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading description with null
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.reimbursementStatus
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: JoinColumn{logicalColumnName='reimbursement_status_id', referencedColumn='', mappedBy=''}
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursementStatus]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursementStatus]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=reimbursementStatus, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property reimbursementStatus
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading reimbursementStatus with none
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.reimbursementType
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: JoinColumn{logicalColumnName='reimbursement_type_id', referencedColumn='', mappedBy=''}
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursementType]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursementType]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=reimbursementType, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property reimbursementType
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading reimbursementType with none
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.resolved
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolved]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolved]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property resolved with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Reimbursement:resolved]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for resolved
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement.resolved
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolved]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolved]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolved]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property resolved
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading resolved with null
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.resolver
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: JoinColumn{logicalColumnName='resolver_id', referencedColumn='', mappedBy=''}
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=resolver, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property resolver
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading resolver with none
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.Reimbursement.submitted
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [submitted]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [submitted]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement), mappingColumn=submitted, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property submitted with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Reimbursement:submitted]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for submitted
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement.submitted
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [submitted]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [submitted]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [submitted]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property submitted
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading submitted with null
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: models.ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: ReimbursementStatus -> models.ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: models.ReimbursementStatus -> models.ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity models.ReimbursementStatus on table reimbursement_status
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.ReimbursementStatus.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement_status), mappingColumn=reimbursement_status_id, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.ReimbursementStatus] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.ReimbursementStatus
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.ReimbursementStatus:id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for id
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement_status.reimbursement_status_id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading id with null
05:25:47 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(reimbursement_status_id)]), id, identity, , ...)
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Bind @Id on id
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.ReimbursementStatus.reim_status
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reim_status]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reim_status]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement_status), mappingColumn=reim_status, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property reim_status with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.ReimbursementStatus:reim_status]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for reim_status
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement_status.reim_status
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reim_status]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reim_status]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reim_status]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property reim_status
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading reim_status with null
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name ReimbursementType
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: ReimbursementType -> models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Import: models.ReimbursementType -> models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity models.ReimbursementType on table reimbursement_type
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.ReimbursementType.id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [type_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [type_id]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement_type), mappingColumn=type_id, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.ReimbursementType] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.ReimbursementType
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.ReimbursementType:id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for id
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement_type.type_id
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [type_id]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading id with null
05:25:47 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(type_id)]), id, identity, , ...)
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Bind @Id on id
05:25:47 [main] TRACE org.hibernate.cfg.AnnotationBinder - Processing annotations of models.ReimbursementType.type
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type]
05:25:47 [main] DEBUG org.hibernate.cfg.AnnotatedColumn - Binding column: Column{table=org.hibernate.mapping.Table(reimbursement_type), mappingColumn=reimbursement_type, insertable=true, updatable=true, unique=false}
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property type with lazy=false
05:25:47 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.ReimbursementType:type]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - building BasicValue for type
05:25:47 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: reimbursement_type.reimbursement_type
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type]
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property type
05:25:47 [main] TRACE org.hibernate.cfg.annotations.PropertyBinder - Cascading type with null
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for user_role
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for resolved
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for submitted
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for reim_status
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
05:25:47 [main] DEBUG org.hibernate.cfg.annotations.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
05:25:47 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
05:25:47 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [reimbursement]
05:25:47 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [reimbursement_status_id] to be non-null as it is part of the primary key for table [reimbursement_status]
05:25:47 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [type_id] to be non-null as it is part of the primary key for table [reimbursement_type]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK1ml4bsrvhjkvx6kd5cpbq01a8]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKbqi49689vior29y2xpadscoty]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKn8ebq7ae3f75fcgf6095x4ytr]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKc00kv3jxjxmw0f7jfgd09p98i]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.Role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKh555fyoyldpyaltlb7jva35j2]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [author_id]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.ReimbursementStatus
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_id]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_id]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.User
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [resolver_id]
05:25:47 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: models.Role
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [role_id]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
05:25:47 [main] TRACE org.hibernate.loader.BatchFetchStyle - Interpreting BatchFetchStyle from setting : null
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
05:25:47 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
05:25:47 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
05:25:47 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
05:25:47 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
05:25:47 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=18, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\derek\Documents\derek-mully\Project1\Employee-Reimbursement\target\classes;C:\Users\derek\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\derek\.m2\repository\org\postgresql\postgresql\42.4.0\postgresql-42.4.0.jar;C:\Users\derek\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\derek\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\derek\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\derek\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\derek\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\derek\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\derek\.m2\repository\org\hibernate\orm\hibernate-core\6.1.1.Final\hibernate-core-6.1.1.Final.jar;C:\Users\derek\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.0.0\jakarta.persistence-api-3.0.0.jar;C:\Users\derek\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\derek\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\derek\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\derek\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\derek\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\derek\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\derek\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\derek\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\derek\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\derek\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\derek\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\derek\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\derek\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\derek\.m2\repository\org\antlr\antlr4-runtime\4.10\antlr4-runtime-4.10.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, java.vm.specification.version=18, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\derek\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_18.0.1.v20220515-1614\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\derek, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-19, java.home=C:\Users\derek\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_18.0.1.v20220515-1614\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=18.0.1+10, user.name=derek, hibernate.driver_class=org.postgresql.Driver, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-18.0.1+10, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\derek\AppData\Local\Temp\, java.version=18.0.1, user.dir=C:\Users\derek\Documents\derek-mully\Project1\Employee-Reimbursement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1220ef43, native.encoding=Cp1252, java.library.path=C:\Users\derek\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_18.0.1.v20220515-1614\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/derek/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_18.0.1.v20220515-1614/jre/bin/server;C:/Users/derek/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_18.0.1.v20220515-1614/jre/bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Python37-32\Scripts\;C:\Program Files (x86)\Python37-32\;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_331\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Users\derek\scoop\apps\vscode\current\bin;C:\Users\derek\scoop\apps\maven\current\bin;C:\Users\derek\scoop\shims;C:\Users\derek\Anaconda3;C:\Users\derek\Anaconda3\Library\mingw-w64\bin;C:\Users\derek\Anaconda3\Library\usr\bin;C:\Users\derek\Anaconda3\Library\bin;C:\Users\derek\Anaconda3\Scripts;C:\Users\derek\AppData\Local\Microsoft\WindowsApps;C:\Users\derek\Desktop;;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=18.0.1+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=62.0}
05:25:47 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
05:25:47 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
05:25:47 [main] TRACE org.hibernate.query.sqm.function.SqmFunctionRegistry - SqmFunctionRegistry created
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@726934e2] under count; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7d986d83] under every; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77f991c] under any; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@64942607] under position; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@50eb4a2c] under overlay; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7885776b] under trim; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4eaa375c] under cast; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@152c4495] under collate; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1d06f16f] under extract; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@60e3c26e] under ifnull; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1b410308] under pad; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@36d33f4] under str; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@26ca61bf] under format; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1f2f0109] under timestampadd; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6a5e167a] under timestampdiff; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d6d480c] under current_date; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e95595b] under current_time; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a917723] under current_timestamp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e4579c7] under local_date; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@796f632b] under local_time; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d94a2dc] under local_datetime; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cedee22] under offset_datetime; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59b32539] under instant; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@18a19e] under sql; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under round; prior registration was NamedSqmFunctionTemplate(round)
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(trunc)] under trunc; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : log10 -> log
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6274670b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@796f632b
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5d94a2dc
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under date_trunc; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7f7b6639] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@16ac5d35] under bit_length; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3965bdf9] under octet_length; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : char -> chr
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c0e00a8] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@64942607
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1860f3be] under bitand; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd15072] under bitor; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78cfa264] under bitxor; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3408f695] under bitnot; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : every -> bool_and
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registering alternate key : any -> bool_or
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6a0ea9] under median; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4887de2b] under insert; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@f0020b1] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@50eb4a2c
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@759de304] under locate; prior registration was NamedSqmFunctionTemplate(locate)
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@769bd849] under listagg; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@76f881d9] under mode; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6dd36ab6] under percentile_cont; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@50a13c2f] under percentile_disc; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c20cdd0] under rank; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@74606204] under dense_rank; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6b6eae52] under percent_rank; prior registration was null
05:25:47 [main] DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@d4df0e] under cume_dist; prior registration was null
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp date_trunc(TEMPORAL_UNIT field, TEMPORAL datetime)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String initcap(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time localtime
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double median(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - mode()
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double trunc(NUMERIC number[, INTEGER places])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg0[, NUMERIC arg1])
05:25:47 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
05:25:47 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a2b1eb4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@34d713a2]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.ReimbursementType] is safe
05:25:47 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.ReimbursementType
05:25:47 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [type], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#author` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#author` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementStatus` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementStatus` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementType` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementType` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#resolver` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#resolver` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.Reimbursement] is safe
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Reimbursement
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#author` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementStatus` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#reimbursementType` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.Reimbursement#resolver` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [author.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementStatus.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementType.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [resolver.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [amount], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [author], existing type = [org.hibernate.type.ManyToOneType(models.User)], incoming type = [org.hibernate.type.ManyToOneType(models.User)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [author.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [author.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [description], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementStatus], existing type = [org.hibernate.type.ManyToOneType(models.ReimbursementStatus)], incoming type = [org.hibernate.type.ManyToOneType(models.ReimbursementStatus)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementStatus.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementStatus.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementType], existing type = [org.hibernate.type.ManyToOneType(models.ReimbursementType)], incoming type = [org.hibernate.type.ManyToOneType(models.ReimbursementType)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementType.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reimbursementType.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [resolved], existing type = [basicType@5(java.sql.Timestamp,93)], incoming type = [basicType@5(java.sql.Timestamp,93)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [resolver], existing type = [org.hibernate.type.ManyToOneType(models.User)], incoming type = [org.hibernate.type.ManyToOneType(models.User)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [resolver.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [resolver.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [submitted], existing type = [basicType@5(java.sql.Timestamp,93)], incoming type = [basicType@5(java.sql.Timestamp,93)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.User] is safe
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.User
05:25:48 [main] DEBUG org.hibernate.ormbytecode.interceptor - To-one property `models.User#role` was mapped with LAZY + NO_PROXY but the class was not enhanced
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [role.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [password], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [role], existing type = [org.hibernate.type.ManyToOneType(models.Role)], incoming type = [org.hibernate.type.ManyToOneType(models.Role)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [role.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [role.id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [username], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.ReimbursementStatus] is safe
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.ReimbursementStatus
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [reim_status], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [models.Role] is safe
05:25:48 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Role
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [user_role], existing type = [basicType@4(java.lang.String,12)], incoming type = [basicType@4(java.lang.String,12)]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [basicType@3(java.lang.Integer,4)], incoming type = [basicType@3(java.lang.Integer,4)]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting post-init callbacks
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(models.ReimbursementType) `staticFetchableList` generator
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[models.Reimbursement.author]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[models.Reimbursement.reimbursementStatus]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[models.Reimbursement.reimbursementType]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[models.Reimbursement.resolver]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(models.Reimbursement) `staticFetchableList` generator
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[models.User.role]
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(models.User) `staticFetchableList` generator
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(models.ReimbursementStatus) `staticFetchableList` generator
05:25:48 [main] DEBUG org.hibernate.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(models.Role) `staticFetchableList` generator
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: models.ReimbursementType
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select type_id from reimbursement_type where type_id =?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into reimbursement_type (reimbursement_type, type_id) values (?, ?)
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update reimbursement_type set reimbursement_type=? where type_id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from reimbursement_type where type_id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into reimbursement_type (reimbursement_type) values (?)
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.ReimbursementType)] with identifierForTableGroup [models.ReimbursementType] for NavigablePath [models.ReimbursementType] 
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.ReimbursementType
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.ReimbursementType]
 |  \-BasicFetch [models.ReimbursementType.type]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:67) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:195) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.prepare(SingleIdEntityLoaderStandardImpl.java:54) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoader(AbstractEntityPersister.java:4274) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate(AbstractEntityPersister.java:4266) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:236) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:60) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:308) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:754) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:773) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:15) ~[classes/:?]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:29) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : models.ReimbursementType) {
          primaryTableReference : reimbursement_type as r1_0
        }
      }
    }

05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: models.Reimbursement
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from reimbursement where id =?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into reimbursement (amount, author_id, description, reimbursement_status_id, reimbursement_type_id, resolved, resolver_id, submitted, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update reimbursement set amount=?, author_id=?, description=?, reimbursement_status_id=?, reimbursement_type_id=?, resolved=?, resolver_id=?, submitted=? where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from reimbursement where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into reimbursement (amount, author_id, description, reimbursement_status_id, reimbursement_type_id, resolved, resolver_id, submitted) values (?, ?, ?, ?, ?, ?, ?, ?)
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.Reimbursement)] with identifierForTableGroup [models.Reimbursement] for NavigablePath [models.Reimbursement] 
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aaecabd] with identifierForTableGroup [models.Reimbursement.author] for NavigablePath [models.Reimbursement.author] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.author
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22cb3d59] with identifierForTableGroup [models.Reimbursement.author.role] for NavigablePath [models.Reimbursement.author.role] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r2_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.author.role
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b8b5020] with identifierForTableGroup [models.Reimbursement.reimbursementStatus] for NavigablePath [models.Reimbursement.reimbursementStatus] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r3_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.reimbursementStatus
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d37ee0c] with identifierForTableGroup [models.Reimbursement.reimbursementType] for NavigablePath [models.Reimbursement.reimbursementType] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r4_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.reimbursementType
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5a7b309b] with identifierForTableGroup [models.Reimbursement.resolver] for NavigablePath [models.Reimbursement.resolver] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r5_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.resolver
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4602f874] with identifierForTableGroup [models.Reimbursement.resolver.role] for NavigablePath [models.Reimbursement.resolver.role] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r6_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Reimbursement.resolver.role
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.Reimbursement]
 |  +-BasicFetch [models.Reimbursement.amount]
 |  +-EntityFetchJoinedImpl [models.Reimbursement.author]
 |  +-BasicFetch [models.Reimbursement.description]
 |  +-EntityFetchJoinedImpl [models.Reimbursement.reimbursementStatus]
 |  +-EntityFetchJoinedImpl [models.Reimbursement.reimbursementType]
 |  +-BasicFetch [models.Reimbursement.resolved]
 |  +-EntityFetchJoinedImpl [models.Reimbursement.resolver]
 |  \-BasicFetch [models.Reimbursement.submitted]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:67) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:195) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.prepare(SingleIdEntityLoaderStandardImpl.java:54) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoader(AbstractEntityPersister.java:4274) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate(AbstractEntityPersister.java:4266) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:236) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:60) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:308) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:754) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:773) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:15) ~[classes/:?]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:29) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : models.Reimbursement) {
          primaryTableReference : reimbursement as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (a1 : models.Reimbursement.author) {
              primaryTableReference : users as a1_0
              TableGroupJoins {
                left  join LazyTableGroup (r2 : models.Reimbursement.author.role) {
                  primaryTableReference : user_roles as r2_0
                }
              }
            }
            left  join LazyTableGroup (r3 : models.Reimbursement.reimbursementStatus) {
              primaryTableReference : reimbursement_status as r3_0
            }
            left  join LazyTableGroup (r4 : models.Reimbursement.reimbursementType) {
              primaryTableReference : reimbursement_type as r4_0
            }
            left  join LazyTableGroup (r5 : models.Reimbursement.resolver) {
              primaryTableReference : users as r5_0
              TableGroupJoins {
                left  join LazyTableGroup (r6 : models.Reimbursement.resolver.role) {
                  primaryTableReference : user_roles as r6_0
                }
              }
            }
          }
        }
      }
    }

05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: models.User
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from users where id =?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into users (password, role_id, username, id) values (?, ?, ?, ?)
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update users set password=?, role_id=?, username=? where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from users where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into users (password, role_id, username) values (?, ?, ?)
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.User)] with identifierForTableGroup [models.User] for NavigablePath [models.User] 
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.User
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d850a25] with identifierForTableGroup [models.User.role] for NavigablePath [models.User.role] 
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.User.role
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.User]
 |  +-BasicFetch [models.User.password]
 |  +-EntityFetchJoinedImpl [models.User.role]
 |  \-BasicFetch [models.User.username]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:67) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:195) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.prepare(SingleIdEntityLoaderStandardImpl.java:54) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoader(AbstractEntityPersister.java:4274) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate(AbstractEntityPersister.java:4266) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:236) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:60) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:308) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:754) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:773) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:15) ~[classes/:?]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:29) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : models.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : models.User.role) {
              primaryTableReference : user_roles as r1_0
            }
          }
        }
      }
    }

05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: models.ReimbursementStatus
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select reimbursement_status_id from reimbursement_status where reimbursement_status_id =?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into reimbursement_status (reim_status, reimbursement_status_id) values (?, ?)
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update reimbursement_status set reim_status=? where reimbursement_status_id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from reimbursement_status where reimbursement_status_id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into reimbursement_status (reim_status) values (?)
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.ReimbursementStatus)] with identifierForTableGroup [models.ReimbursementStatus] for NavigablePath [models.ReimbursementStatus] 
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.ReimbursementStatus
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.ReimbursementStatus]
 |  \-BasicFetch [models.ReimbursementStatus.reim_status]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:67) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:195) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.prepare(SingleIdEntityLoaderStandardImpl.java:54) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoader(AbstractEntityPersister.java:4274) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate(AbstractEntityPersister.java:4266) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:236) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:60) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:308) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:754) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:773) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:15) ~[classes/:?]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:29) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : models.ReimbursementStatus) {
          primaryTableReference : reimbursement_status as r1_0
        }
      }
    }

05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: models.Role
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from user_roles where id =?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into user_roles (user_role, id) values (?, ?)
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update user_roles set user_role=? where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from user_roles where id=?
05:25:48 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into user_roles (user_role) values (?)
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.Role)] with identifierForTableGroup [models.Role] for NavigablePath [models.Role] 
05:25:48 [main] TRACE org.hibernate.loader.ast.internal.LoaderSelectBuilder - Starting visitation of FetchParent's Fetchables : models.Role
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.Role]
 |  \-BasicFetch [models.Role.user_role]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:67) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:195) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.prepare(SingleIdEntityLoaderStandardImpl.java:54) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoader(AbstractEntityPersister.java:4274) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate(AbstractEntityPersister.java:4266) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:236) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:60) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:308) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:754) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:773) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at util.HibernateUtil.getSessionFactory(HibernateUtil.java:15) ~[classes/:?]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:29) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : models.Role) {
          primaryTableReference : user_roles as r1_0
        }
      }
    }

05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Wrapping up metadata context...
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Starting entity [models.ReimbursementType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building identifier attribute [models.ReimbursementType.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.ReimbursementType.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.ReimbursementType.type]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [type]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.ReimbursementType.type]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.model.domain.AbstractIdentifiableType - Interpreting domain-model identifier descriptor
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Completed entity [models.ReimbursementType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Starting entity [models.Reimbursement]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building identifier attribute [models.Reimbursement.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.Reimbursement.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.amount]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [amount]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.Reimbursement.amount]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.author]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [author]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private models.User models.Reimbursement.author]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=models.User, class=org.hibernate.type.ManyToOneType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.description]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [description]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.Reimbursement.description]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.reimbursementStatus]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [reimbursementStatus]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private models.ReimbursementStatus models.Reimbursement.reimbursementStatus]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=models.ReimbursementStatus, class=org.hibernate.type.ManyToOneType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.reimbursementType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [reimbursementType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private models.ReimbursementType models.Reimbursement.reimbursementType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=models.ReimbursementType, class=org.hibernate.type.ManyToOneType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.resolved]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [resolved]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.sql.Timestamp models.Reimbursement.resolved]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=timestamp, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.resolver]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [resolver]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private models.User models.Reimbursement.resolver]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=models.User, class=org.hibernate.type.ManyToOneType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Reimbursement.submitted]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [submitted]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.sql.Timestamp models.Reimbursement.submitted]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=timestamp, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.model.domain.AbstractIdentifiableType - Interpreting domain-model identifier descriptor
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Completed entity [models.Reimbursement]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Starting entity [models.User]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building identifier attribute [models.User.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.User.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.User.password]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [password]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.User.password]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.User.role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private models.Role models.User.role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=models.Role, class=org.hibernate.type.ManyToOneType]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.User.username]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [username]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.User.username]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.model.domain.AbstractIdentifiableType - Interpreting domain-model identifier descriptor
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Completed entity [models.User]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Starting entity [models.ReimbursementStatus]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building identifier attribute [models.ReimbursementStatus.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.ReimbursementStatus.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.ReimbursementStatus.reim_status]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [reim_status]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.ReimbursementStatus.reim_status]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.model.domain.AbstractIdentifiableType - Interpreting domain-model identifier descriptor
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Completed entity [models.ReimbursementStatus]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Starting entity [models.Role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building identifier attribute [models.Role.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private int models.Role.id]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Building attribute [models.Role.user_role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory - Starting attribute metadata determination [user_role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined member [private java.lang.String models.Role.user_role]
05:25:48 [main] TRACE org.hibernate.metamodel.internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
05:25:48 [main] TRACE org.hibernate.metamodel.model.domain.AbstractIdentifiableType - Interpreting domain-model identifier descriptor
05:25:48 [main] TRACE org.hibernate.metamodel.internal.MetadataContext - Completed entity [models.Role]
05:25:48 [main] DEBUG org.hibernate.query.named.NamedObjectRepository - Checking 0 named HQL queries
05:25:48 [main] DEBUG org.hibernate.query.named.NamedObjectRepository - Checking 0 named SQL queries
05:25:48 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
05:25:48 [main] INFO  org.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5175d9ad] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_roles_id_seq]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [users_id_seq]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_status_reimbursement_status_id_seq]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_type_type_id_seq]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postgres]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [reimbursement_id_seq]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [public]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [public] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [amount]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [amount] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [description]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [description] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [resolved]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [resolved] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [submitted]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [submitted] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [author_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [author_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_status_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_status_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_type_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_type_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [resolver_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [resolver_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_status]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_status] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_status_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_status_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reim_status]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reim_status] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_type]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_type] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [type_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [type_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [reimbursement_type]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [reimbursement_type] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_roles]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_roles] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_role]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_role] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [users]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [users] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [password]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [username]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [username] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [role_id]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [role_id] in lower case for use in DatabaseMetaData
05:25:48 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
05:25:48 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
05:25:48 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
05:25:48 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
05:25:48 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
05:25:48 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
05:25:48 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
05:25:48 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@34d713a2] for TypeConfiguration
05:25:48 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2315052d
05:25:48 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
05:25:48 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: d05b0e71-d01f-4b8d-bc5d-a1d5592f2b83 (<unnamed>)
05:25:48 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
05:25:48 [main] TRACE org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null
05:25:48 [main] TRACE org.hibernate.service.internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
05:25:48 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
05:25:48 [main] TRACE org.hibernate.internal.SessionImpl - Opened Session [71c67649-ccd6-48b6-842c-9b7f9c1b922d] at timestamp: 1657877148325
05:25:48 [main] TRACE org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - Resolving SqmRoot [models.ReimbursementStatus] to TableGroup
05:25:48 [main] TRACE org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - Resolving SqmRoot [models.ReimbursementStatus] to TableGroup
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : r1_0
05:25:48 [main] TRACE org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - Resolved SqmRoot [models.ReimbursementStatus] to new TableGroup [StandardTableGroup(models.ReimbursementStatus(11453259556700))]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(models.ReimbursementStatus(11453259556700))] with identifierForTableGroup [models.ReimbursementStatus] for NavigablePath [models.ReimbursementStatus] 
05:25:48 [main] TRACE org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - Visiting explicit joins for `models.ReimbursementStatus(11453259556700)`
05:25:48 [main] TRACE org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - SqmRoot [models.ReimbursementStatus] resolved to existing TableGroup [StandardTableGroup(models.ReimbursementStatus(11453259556700))]
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractEntityPersister - #findSubPart(`reim_status`)
05:25:48 [main] DEBUG org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f426ddd
05:25:48 [main] TRACE org.hibernate.persister.entity.AbstractEntityPersister - #findSubPart(`reim_status`)
05:25:48 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [models.ReimbursementStatus(11453259556700)]
 |  \-BasicFetch [models.ReimbursementStatus(11453259556700).reim_status]

05:25:48 [main] TRACE org.hibernate.orm.results.graph.AST - Stack trace calling DomainResultGraphPrinter
java.lang.Exception: null
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:72) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:48) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:39) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:703) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:644) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:377) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:270) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:246) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:537) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:363) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.list(QuerySqmImpl.java:987) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:457) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.getSingleResult(QuerySqmImpl.java:1017) ~[hibernate-core-6.1.1.Final.jar:6.1.1.Final]
	at daos.ReimbursementStatusHibernate.getReimbursementByStatus(ReimbursementStatusHibernate.java:37) ~[classes/:?]
	at Driver.main(Driver.java:10) ~[classes/:?]
05:25:48 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : models.ReimbursementStatus(11453259556700)) {
          primaryTableReference : reimbursement_status as r1_0
        }
      }
    }

05:25:48 [main] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
05:25:48 [main] TRACE org.hibernate.orm.results - Registering initializer : EntityResultInitializer(models.ReimbursementStatus(11453259556700))
05:25:48 [main] DEBUG org.hibernate.orm.results - Initializer list
05:25:48 [main] DEBUG org.hibernate.orm.results -     models.ReimbursementStatus(11453259556700) -> EntityResultInitializer(models.ReimbursementStatus(11453259556700))@1568841456 (SingleTableEntityPersister(models.ReimbursementStatus))
05:25:48 [main] TRACE org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess - Executing query to retrieve ResultSet : select r1_0.reimbursement_status_id,r1_0.reim_status from reimbursement_status r1_0 where r1_0.reim_status=?
05:25:48 [main] DEBUG org.hibernate.SQL - select r1_0.reimbursement_status_id,r1_0.reim_status from reimbursement_status r1_0 where r1_0.reim_status=?
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Registering statement [select r1_0.reimbursement_status_id,r1_0.reim_status from reimbursement_status r1_0 where r1_0.reim_status=?]
05:25:48 [main] TRACE org.hibernate.orm.jdbc.bind - binding parameter [1] as [VARCHAR] - [pending]
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Registering result set [org.postgresql.jdbc.PgResultSet@cfd5cd2]
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterStatement
05:25:48 [main] TRACE org.hibernate.orm.jdbc.extract - extracted value ([1] : [INTEGER]) - [3]
05:25:48 [main] TRACE org.hibernate.orm.jdbc.extract - extracted value ([2] : [VARCHAR]) - [pending]
05:25:48 [main] TRACE org.hibernate.orm.results.loading - StandardRowReader#readRow
05:25:48 [main] TRACE org.hibernate.orm.results.loading.entity - (o.h.s.r.g.e.i.EntityResultInitializer) Beginning Initializer#resolveKey process for entity : models.ReimbursementStatus(11453259556700)
05:25:48 [main] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3]
05:25:48 [main] DEBUG org.hibernate.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (models.ReimbursementStatus(11453259556700)): 3
05:25:48 [main] TRACE org.hibernate.orm.results.loading.entity - (o.h.s.r.g.e.i.EntityResultInitializer) Beginning Initializer#resolveInstance process for entity (models.ReimbursementStatus(11453259556700)) : 3
05:25:48 [main] DEBUG org.hibernate.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [models.ReimbursementStatus(11453259556700)#3] : ReimbursementStatus [id=3, reim_status=null]
05:25:48 [main] TRACE org.hibernate.orm.results.loading.entity - (EntityResultInitializer) Beginning Initializer#initializeInstance process for entity models.ReimbursementStatus(11453259556700)#3
05:25:48 [main] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [pending]
05:25:48 [main] DEBUG org.hibernate.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : models.ReimbursementStatus(11453259556700)#3
05:25:48 [main] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fe42a09
05:25:48 [main] DEBUG org.hibernate.orm.results.loading.entity - (EntityResultInitializer) Found existing loading entry [models.ReimbursementStatus(11453259556700)#3] - using loading instance
05:25:48 [main] TRACE org.hibernate.orm.results.loading - StandardRowReader#afterRow
05:25:48 [main] TRACE org.hibernate.sql.results.jdbc.internal.JdbcValuesSourceProcessingStateStandardImpl - Total objects hydrated: 1
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing result set [org.postgresql.jdbc.PgResultSet@cfd5cd2]
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Closing result set [org.postgresql.jdbc.PgResultSet@cfd5cd2]
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing statement [select r1_0.reimbursement_status_id,r1_0.reim_status from reimbursement_status r1_0 where r1_0.reim_status='pending']
05:25:48 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Closing prepared statement [select r1_0.reimbursement_status_id,r1_0.reim_status from reimbursement_status r1_0 where r1_0.reim_status='pending']
05:25:48 [main] TRACE org.hibernate.engine.internal.StatefulPersistenceContext - Initializing non-lazy collections
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing JDBC resources
05:25:48 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing JDBC resources
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing JDBC resources
05:25:48 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
05:25:48 [main] TRACE org.hibernate.internal.SessionImpl - Closing session [71c67649-ccd6-48b6-842c-9b7f9c1b922d]
05:25:48 [main] TRACE org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@25ae1f80]
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - Releasing JDBC resources
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Closing logical connection
05:25:48 [main] TRACE org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Logical connection closed
